<div class="spacer-40"></div>

<footer id="footer-main" class="footer-sticky">
    <div class="footer-main-inner">
        <div class="pull-left">
            <p>©&nbsp;<a href="https://CinemaPress.org/" target="_blank">CP</a></p>
        </div>
        <div class="pull-right">
            <a href="javascript:void(0)" class="btn btn-info" id="save">
                <span class="fa fa-floppy-o"></span>&nbsp;&nbsp;Сохранить&nbsp;изменения
            </a>
            <a href="javascript:void(0)" class="btn" id="toggle-footer"> <i class="fa fa-chevron-down"></i> </a>
        </div>
    </div>
</footer>

<script>

    window.onload = function() {

        var i = 0;

        var status = document.querySelectorAll('.module-status');
        if (status)
            for (i = 0; i < status.length; i++)
                status[i].addEventListener('click', statusData);

        var save = document.querySelector('#save');
        if (save)
            save.addEventListener('click', saveData);

        var restart = document.querySelector('#restart');
        if (restart)
            restart.addEventListener('click', restartData);

        var flush = document.querySelector('#flush');
        if (flush)
            flush.addEventListener('click', flushData);

        var image = document.querySelector('#image');
        if (image)
            image.addEventListener('click', imageData);

        var database = document.querySelector('#database');
        if (database)
            database.addEventListener('click', databaseData);

        var del = document.querySelectorAll('.del');
        if (del)
            for (i = 0; i < del.length; i++)
                del[i].addEventListener('click', delData);

        var addId = document.querySelectorAll('a[data-add-name]');
        if (addId)
            for (i = 0; i < addId.length; i++)
                addId[i].addEventListener('click', addIdList);

        var delId = document.querySelectorAll('li[data-delete-name]');
        if (delId)
            for (i = 0; i < delId.length; i++)
                delId[i].addEventListener('click', delIdList);

        articlesCP();

        inputData();

    };

    function statusData() {

        var self = this;
        self.removeEventListener('click', statusData);
        self.innerHTML = '<span class="fa fa-spinner fa-spin"></span>&nbsp;&nbsp;Изменяется&nbsp;статус';
        
        var data = {
            "switch": {
                "module": self.dataset.module,
                "status": self.dataset.status
            }
        };

        sendServer(data, function (err, result) {
            if (err) {
                self.innerHTML = '<span class="fa fa-bug"></span>&nbsp;&nbsp;' + err;
            }
            else {
                location.reload();
            }
        });

    }

    function restartData() {

        var self = this;
        self.removeEventListener('click', restartData);
        self.innerHTML = '<span class="fa fa-spinner fa-spin"></span>&nbsp;&nbsp;Перезагружается';

        var data = {
            "restart": true
        };

        sendServer(data, function () {
            self.innerHTML ='<span class="fa fa-repeat"></span>&nbsp;&nbsp;Перезагрузить';
            self.addEventListener('click', restartData);
        });

    }

    function flushData() {

        var self = this;
        self.removeEventListener('click', flushData);
        self.innerHTML = '<span class="fa fa-spinner fa-spin"></span>&nbsp;&nbsp;Очищается&nbsp;кэш';

        var data = {
            "flush": true
        };

        sendServer(data, function (err, result) {
            if (err) {
                self.innerHTML = '<span class="fa fa-bug"></span>&nbsp;&nbsp;' + err;
            }
            else {
                self.innerHTML ='<span class="fa fa-trash-o"></span>&nbsp;&nbsp;Очистить&nbsp;кэш';
                self.addEventListener('click', flushData);
            }
        });

    }

    function imageData() {

        var self = this;
        self.removeEventListener('click', imageData);
        self.innerHTML = '<span class="fa fa-spinner fa-spin"></span>&nbsp;&nbsp;Загружаются&nbsp;(около&nbsp;20&nbsp;минут)';

        var data = {
            "image": true
        };

        sendServer(data, true, function (err, result) {
            if (err) {
                self.innerHTML = '<span class="fa fa-bug"></span>&nbsp;&nbsp;' + err;
            }
            else {
                self.innerHTML ='<span class="fa fa-picture-o"></span>&nbsp;&nbsp;Картинки&nbsp;загружены';
            }
        });

    }

    function databaseData() {

        var key = document.querySelector('#key');

        if (!key || !key.value) return;

        var self = this;
        self.removeEventListener('click', databaseData);
        self.innerHTML = '<span class="fa fa-spinner fa-spin"></span>&nbsp;&nbsp;Загружаются&nbsp;(около&nbsp;10&nbsp;минут)';

        var data = {
            "database": key.value
        };

        sendServer(data, true, function (err, result) {
            if (err) {
                self.innerHTML = '<span class="fa fa-bug"></span>&nbsp;&nbsp;' + err;
            }
            else {
                setTimeout(function() {
                    self.innerHTML ='<span class="fa fa-spinner fa-spin"></span>&nbsp;&nbsp;Перезагрузка';
                    var data = {
                        "restart": true
                    };
                    sendServer(data, function () {
                        window.location.href = "<%- config.protocol %><%- config.domain %>/<%- config.urls.admin %>";
                    });
                }, 15000);
                setTimeout(function() {
                    window.location.href = "<%- config.protocol %><%- config.domain %>/<%- config.urls.admin %>";
                }, 20000);
            }
        });

    }

    function delData() {

        var self = this;
        self.removeEventListener('click', delData);
        self.innerHTML = '<span class="fa fa-spinner fa-spin"></span>';

        var data = {
            "movie": {
                "kp_id": (self.dataset.kp_id) ? self.dataset.kp_id : null
            },
            "collection": {
                "url": (self.dataset.url) ? self.dataset.url : null
            },
            "delete": true
        };

        sendServer(data, function (err, result) {
            if (err) {
                self.innerHTML = '<span class="fa fa-bug"></span>&nbsp;&nbsp;' + err;
            }
            else {
                self.innerHTML ='<span class="fa fa-check"></span>';
            }
        });

    }

    function delIdList() {
        var self = this;
        self.parentNode.removeChild(self);
        var list = document.querySelector('textarea[name="' + self.dataset.deleteName + '"]');
        var first = new RegExp('^' + self.dataset.deleteId + ',');
        var middle = new RegExp(',' + self.dataset.deleteId + ',|^' + self.dataset.deleteId + '$');
        var last = new RegExp(',' + self.dataset.deleteId + '$');
        list.value = list.value
                .replace(middle, ',')
                .replace(first, '')
                .replace(last, '')
                .replace(/\s/g, '')
                .replace(/,+/g, ',')
                .replace(/(^,*)|(,*)$/g, '');
    }

    function addIdList() {
        var self = this;
        var id = document.querySelector('input[data-add-id="' + self.dataset.addName + '"]');
        var kp_id = parseInt(id.value);
        var id_kp = 0;

        if (id.value.indexOf('<%- config.domain %>')+1) {

            var prefix_id = '<%- config.urls.prefix_id %>' || '/';
            var regexpId  = new RegExp(prefix_id + '([0-9]{1,7})', 'ig');
            var execId    = regexpId.exec(id.value);
            id_kp     = (execId) ? parseInt(execId[1]) : 0;

            kp_id = parseInt(id_kp) - parseInt(<%- config.urls.unique_id %>);
        }
        else if (id.value.indexOf('kinopoisk.ru')+1) {
            id_kp = /(film\/|movie\/)([0-9]{1,7})/gi.exec(id.value);
            kp_id = (id_kp) ? parseInt(id_kp[2]) : 0;
        }

        if (kp_id) {
            var addPoster = document.querySelector('ul[data-add-name="' + self.dataset.addName + '"]');
            var addList = document.querySelector('textarea[name="' + self.dataset.addName + '"]');
            var ids = addList.value.split(',');
            ids = (ids.length && ids[0]) ? ids.map(function (id) {return parseInt(id)}) : [];
            if (!(ids.indexOf(kp_id)+1)) {
                ids.unshift(kp_id);
                addList.value = ids.join(',');
                addPoster.innerHTML = '<li data-delete-id="' + kp_id + '" data-delete-name="' + self.dataset.addName + '"><img class="media-object" src="https://st.kp.yandex.net/images/sm_film/' + kp_id + '.jpg" alt="ID: ' + kp_id + '" title="ID: ' + kp_id + '"></li>' + addPoster.innerHTML;
                var delId = document.querySelectorAll('li[data-delete-name]');
                if (delId)
                    for (var i = 0; i < delId.length; i++)
                        delId[i].addEventListener('click', delIdList);
            }
        }

        id.value = '';
    }

    function saveData() {

        var configs = document.querySelectorAll('input[name],select[name],textarea[name]');

        if (!configs || !configs.length) return false;

        var self = this;
        self.removeEventListener('click', saveData);
        self.innerHTML = '<span class="fa fa-spinner fa-spin"></span>&nbsp;&nbsp;Сохраняются&nbsp;изменения';

        var data = {};

        for (var i = 0; i < configs.length; i++) {

            if (configs[i].getAttribute('type')) {
                if (configs[i].getAttribute('type') == 'checkbox' && !configs[i].checked) {
                    continue;
                }
                else if (configs[i].getAttribute('type') == 'radio' && !configs[i].checked) {
                    continue;
                }
            }

            if (!configs[i].value) {
                if (
                        configs[i].getAttribute('type') &&
                        configs[i].getAttribute('type') == 'checkbox'
                ) { console.log('Empty checkbox.'); }
                else if (
                        configs[i].name == 'collection.image'
                ) { console.log('Empty collection.'); }
                else if (
                        configs[i].name == 'config.codes.head' ||
                        configs[i].name == 'config.codes.footer' ||
                        configs[i].name == 'config.publish.thematic.country' ||
                        configs[i].name == 'config.publish.thematic.genre' ||
                        configs[i].name == 'config.publish.thematic.year' ||
                        configs[i].name == 'config.publish.thematic.type' ||
                        configs[i].name == 'config.publish.thematic.actor' ||
                        configs[i].name == 'config.publish.thematic.director' ||
                        configs[i].name == 'config.publish.thematic.query_id' ||
                        configs[i].name == 'config.index.country.keys' ||
                        configs[i].name == 'config.index.genre.keys' ||
                        configs[i].name == 'config.index.year.keys' ||
                        configs[i].name == 'config.index.type.keys' ||
                        configs[i].name == 'config.index.actor.keys' ||
                        configs[i].name == 'config.index.director.keys' ||
                        configs[i].name == 'config.index.collections.keys' ||
                        configs[i].name == 'config.index.ids.keys' ||
                        configs[i].name == 'config.index.count.key' ||
                        configs[i].name == 'config.urls.prefix_id'
                ) { console.log('Empty config.'); }
                else if (
                        configs[i].name == 'modules.comments.data.cackle.id' ||
                        configs[i].name == 'modules.comments.data.hypercomments.widget_id' ||
                        configs[i].name == 'modules.comments.data.disqus.shortname' ||
                        configs[i].name == 'modules.comments.data.facebook.admins' ||
                        configs[i].name == 'modules.comments.data.vk.app_id' ||
                        configs[i].name == 'modules.social.data.gplus' ||
                        configs[i].name == 'modules.social.data.twitter' ||
                        configs[i].name == 'modules.social.data.facebook' ||
                        configs[i].name == 'modules.social.data.vk' ||
                        configs[i].name == 'modules.player.data.hdgo.token' ||
                        configs[i].name == 'modules.player.data.moonwalk.token' ||
                        configs[i].name == 'modules.player.data.iframe.token' ||
                        configs[i].name == 'modules.player.data.moonlight.domain' ||
                        configs[i].name == 'modules.blocking.data.share.message' ||
                        configs[i].name == 'modules.blocking.data.sub.message' ||
                        configs[i].name == 'modules.blocking.data.adv.code' ||
                        configs[i].name == 'modules.blocking.data.adv.message' ||
                        configs[i].name == 'modules.blocking.data.adv.skip' ||
                        configs[i].name == 'modules.blocking.data.adblock.message' ||
                        configs[i].name == 'modules.soon.data.movies' ||
                        configs[i].name == 'modules.abuse.data.movies' ||
                        configs[i].name == 'modules.abuse.data.imap.user' ||
                        configs[i].name == 'modules.abuse.data.imap.password' ||
                        configs[i].name == 'modules.abuse.data.imap.host' ||
                        configs[i].name == 'modules.abuse.data.imap.port' ||
                        configs[i].name == 'modules.episode.data.translate' ||
                        configs[i].name == 'modules.slider.data.movies' ||
                        configs[i].name.indexOf('modules.adv.data.desktop')+1 ||
                        configs[i].name.indexOf('modules.adv.data.mobile')+1
                ) { console.log('Empty modules.'); }
                else {
                    continue;
                }
            }

            var objects = configs[i].name.split('.');

            for (var j = 1; j <= objects.length; j++) {

                if (j == 1) {
                    data[objects[0]] = (j == objects.length)
                            ? (data[objects[0]])
                                ? data[objects[0]] + ',' + configs[i].value
                                : configs[i].value
                            : data[objects[0]] || {};
                }
                else if (j == 2) {
                    data[objects[0]][objects[1]] = (j == objects.length)
                            ? (data[objects[0]][objects[1]])
                                ? data[objects[0]][objects[1]] + ',' + configs[i].value
                                : configs[i].value
                            : data[objects[0]][objects[1]] || {};
                }
                else if (j == 3) {
                    data[objects[0]][objects[1]][objects[2]] = (j == objects.length)
                            ? (data[objects[0]][objects[1]][objects[2]])
                                ? data[objects[0]][objects[1]][objects[2]] + ',' + configs[i].value
                                : configs[i].value
                            : data[objects[0]][objects[1]][objects[2]] || {};
                }
                else if (j == 4) {
                    data[objects[0]][objects[1]][objects[2]][objects[3]] = (j == objects.length)
                            ? (data[objects[0]][objects[1]][objects[2]][objects[3]])
                                ? data[objects[0]][objects[1]][objects[2]][objects[3]] + ',' + configs[i].value
                                : configs[i].value
                            : data[objects[0]][objects[1]][objects[2]][objects[3]] || {};
                }
                else if (j == 5) {
                    data[objects[0]][objects[1]][objects[2]][objects[3]][objects[4]] = (j == objects.length)
                            ? (data[objects[0]][objects[1]][objects[2]][objects[3]][objects[4]])
                                ? data[objects[0]][objects[1]][objects[2]][objects[3]][objects[4]] + ',' + configs[i].value
                                : configs[i].value
                            : data[objects[0]][objects[1]][objects[2]][objects[3]][objects[4]] || {};
                }
                else if (j == 6) {
                    data[objects[0]][objects[1]][objects[2]][objects[3]][objects[4]][objects[5]] = (j == objects.length)
                            ? (data[objects[0]][objects[1]][objects[2]][objects[3]][objects[4]][objects[5]])
                                ? data[objects[0]][objects[1]][objects[2]][objects[3]][objects[4]][objects[5]] + ',' + configs[i].value
                                : configs[i].value
                            : data[objects[0]][objects[1]][objects[2]][objects[3]][objects[4]][objects[5]] || {};
                }

            }

        }

        if (data.collection && data.collection.movies && data.collection.movies.split(',').length > 500) {
            self.innerHTML = '<span class="fa fa-bug"></span>&nbsp;&nbsp;Запрещено&nbsp;больше&nbsp;500&nbsp;фильмов';
            return;
        }

        sendServer(data, function (err, result) {
            if (data.config && data.config.urls && data.config.urls.admin && data.config.urls.admin != '<%- config.urls.admin %>') {
                location.href = '<%- config.protocol + config.domain + '/' %>' + data.config.urls.admin;
            }
            else if (data.config && data.config.theme && data.config.theme != '<%- config.theme %>') {
                self.innerHTML = '<span class="fa fa-floppy-o"></span>&nbsp;&nbsp;Сохранить&nbsp;изменения';
                self.addEventListener('click', saveData);
            }
            else if (err) {
                self.innerHTML = '<span class="fa fa-bug"></span>&nbsp;&nbsp;' + err;
            }
            else {
                self.innerHTML = '<span class="fa fa-floppy-o"></span>&nbsp;&nbsp;Сохранить&nbsp;изменения';
                self.addEventListener('click', saveData);
            }
        });

    }

    function sendServer(data, long, callback) {

        if (arguments.length == 2) {
            callback = long;
            long = false;
        }

        setTimeout(minTimeout, 1000);

        function minTimeout() {

            var status = '';
            var result = '';
            var state = '';

            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/<%- config.urls.admin %>/change', true);
            xhr.setRequestHeader('Content-type', 'application/json; charset=UTF-8');
            xhr.onreadystatechange = function () {
                status = xhr.status;
                result = xhr.responseText;
                state = xhr.readyState;
                if (xhr.readyState == 4 && xhr.status == 200) {
                    return callback(null, xhr.responseText);
                }
            };
            xhr.send(JSON.stringify(data));

            if (!long) {
                setTimeout(function () {
                    if (state == 4 && status != 200) {
                        console.log('Site error:', status, result);
                        return callback('Ошибка&nbsp;сайта');
                    }
                    else if (state != 4) {
                        console.log('Server error:', status, result);
                        return callback('Ошибка&nbsp;сервера');
                    }
                }, 7000);
            }

        }

    }

    function articlesCP() {

        var xhr = new XMLHttpRequest();
        xhr.open('GET', 'https://cinemapress.org/article/articles.json', true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {

                var result = JSON.parse(xhr.responseText);

                if (result && result.articles) {
                    var articlesCP = document.getElementById('articlesCP');

                    if (!articlesCP) return;

                    var ul = document.createElement('ul');
                    ul.setAttribute('style', 'position: absolute; margin:0; padding:0; top:0;');

                    var articles = result.articles[Math.floor(Math.random() * result.articles.length)];

                    var li = document.createElement('li');
                    li.setAttribute('style', 'margin:0; padding:0; height: 30px;');
                    var i = document.createElement('i');
                    var a = document.createElement('a');
                    a.setAttribute('href', articles.link);
                    a.setAttribute('target', '_blank');
                    a.textContent = articles.title;
                    i.appendChild(a);
                    li.appendChild(i);
                    ul.appendChild(li);
                    articlesCP.appendChild(ul);
                }

            }
        };
        xhr.send();

    }

    function inputData() {

        var i = 0;

        var counts = document.querySelectorAll('.keywords,.titles,.descriptions');
        if (counts && counts.length) {
            for (i = 0; i < counts.length; i++) {
                document.getElementById(counts[i].name).textContent = ((counts[i].value.replace(/(\s+|<.*?>)/g, '')).length).toString();
                counts[i].oninput = function () {
                    document.getElementById(this.name).textContent = ((this.value.replace(/(\s+|<.*?>)/g, '')).length).toString();
                };
            }
        }

        var codes = document.querySelectorAll('.codes');
        if (codes && codes.length) {
            for (i = 0; i < codes.length; i++) {
                codes[i].addEventListener('click', function () {
                    var data_name = this.getAttribute('data-name');
                    var data_code = this.getAttribute('data-code');
                    var caret_pos = 0;
                    var textarea = document.getElementsByName(data_name)[0];
                    if ( document.selection ) {
                        textarea.focus();
                        var sel = document.selection.createRange();
                        sel.moveStart ('character', -textarea.value.length);
                        caret_pos = sel.text.length;
                    } else if ( textarea.selectionStart || textarea.selectionStart == '0' ) {
                        caret_pos = textarea.selectionStart;
                    }
                    textarea.value = textarea.value.slice(0,caret_pos) + data_code + textarea.value.slice(caret_pos);
                    textarea.focus();
                });
            }
        }

        var input_number = document.querySelectorAll('.input_number');
        if (input_number && input_number.length) {
            for (i = 0; i < input_number.length; i++) {
                input_number[i].oninput = function () {
                    var value = this.value;
                    var rep = /[^0-9\-]/;
                    if (rep.test(value)) {
                        value = value.replace(rep, '');
                        this.value = value;
                    }
                };
            }
        }

        var input_url = document.querySelectorAll('.input_url');
        if (input_url && input_url.length) {
            for (i = 0; i < input_url.length; i++) {
                input_url[i].oninput = function () {
                    var value = this.value;
                    var rep = /[^0-9A-Za-z_.\-]/;
                    if (rep.test(value)) {
                        value = value.replace(rep, '');
                        this.value = value;
                    }
                };
            }
        }

        var input_ids = document.querySelectorAll('.input_ids');
        if (input_ids && input_ids.length) {
            for (i = 0; i < input_ids.length; i++) {
                input_ids[i].oninput = function () {
                    var value = this.value;
                    var rep = /[^0-9,]/;
                    if (rep.test(value)) {
                        value = value.replace(rep, '');
                        this.value = value;
                    }
                };
            }
        }

    }

</script>