upstream example.com {

    server 127.0.0.1:3000 max_fails=0 fail_timeout=30s;
    keepalive 8;

}

# Non WWW start
#nonWWW server {listen 443 ssl; listen [::]:443 ssl; server_name www.example.com; ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; ssl_dhparam /etc/letsencrypt/live/example.com/dhparam.pem; ssl_session_cache shared:SSL:10m; ssl_session_timeout 1d; ssl_prefer_server_ciphers on; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS; ssl_stapling on; ssl_stapling_verify on; resolver 1.1.1.1; resolver_timeout 10s; add_header X-Content-Type-Options "nosniff"; add_header Strict-Transport-Security "max-age=31536000"; rewrite ^/(.*)$ $scheme://example.com/$1 permanent;}
# Non WWW end

# Only HTTPS start
#onlyHTTPS server {listen 80; listen [::]:80; server_name example.com m.example.com; return 301 https://$host$request_uri;}
# Only HTTPS end

server {

    listen 80;
    listen [::]:80;

    root /home/example.com;

    server_name example.com m.example.com;

    access_log /var/log/nginx/access_example.com.log main;

    include /etc/nginx/bots.d/blockbots.conf;
    include /etc/nginx/bots.d/ddos.conf;

    # Enable HTTPS start
    #enableHTTPS listen 443 ssl; listen [::]:443 ssl; ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; ssl_dhparam /etc/letsencrypt/live/example.com/dhparam.pem; ssl_session_cache shared:SSL:10m; ssl_session_timeout 1d; ssl_prefer_server_ciphers on; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS; ssl_stapling on; ssl_stapling_verify on; resolver 1.1.1.1; resolver_timeout 10s; add_header X-Content-Type-Options "nosniff"; add_header Strict-Transport-Security "max-age=31536000";
    # Enable HTTPS end

    rewrite ^(.*)/mobile-version(.*)$ $scheme://m.example.com$2 last;

    keepalive_timeout 10;
    client_max_body_size 64m;

    add_header Allow "GET, POST" always;
    if ( $request_method !~ ^(GET|POST)$ ) {
        return 444;
    }

    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {add_header "" "";}
    location ~ "^/pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon$" { }

    location ~ ^/(themes|favicon.*|android-chrome.*|apple-touch-icon\.png|mstile-150x150\.png|browserconfig\.xml|safari-pinned-tab\.svg|site\.webmanifest) {
        expires           30d;
        access_log        off;
        autoindex         off;
        add_header        Cache-Control "public, no-transform";
        proxy_cache       cinemacache;
        proxy_cache_valid 404 500 502 503 504 1m;
        proxy_cache_valid any 30d;
        proxy_max_temp_file_size 0;
        proxy_pass        http://example.com;
    }

    location /images/ {
        rewrite           "^\/images\/(poster|picture)\/(medium|small)\/.*img([0-9]+).*\.jpg$" "/$1/$2/$3.jpg" break;
        root              /var/local/images;
        expires           30d;
        access_log        off;
        autoindex         off;
        add_header        Cache-Control "public, no-transform";
        proxy_cache       cinemacache;
        proxy_cache_valid 404 500 502 503 504 1m;
        proxy_cache_valid any 30d;
        try_files $uri    /poster/no-poster.jpg /poster/small/629951.jpg =404;
    }

    location ~* ^/(config|modules|lib|routes|core|app\.js|package\.json|package-lock\.json|process\.json|restart\.server|LICENSE\.txt|README\.md|.*\.sh|.*\.conf|.*\.jade|.*\.ejs)($|\/) {
        rewrite ^/(.*)$ "https://cinemapress.org/article/kak-vzlomat-sayt.html" permanent;
    }

    location / {
        if ($host ~* "^(m\.example.com)$") {
            rewrite ^(.*)$ /mobile-version$1 break;
        }
        #if ($http_cookie ~* ".+" ) {
        #    set $do_not_cache 1;
        #}

        expires                  1h;
        limit_req                zone=cinemapress burst=50;
        proxy_max_temp_file_size 0;
        proxy_next_upstream      error timeout http_500 http_502 http_503 http_504;
        proxy_set_header         Connection "";
        proxy_set_header         Host            $host;
        proxy_set_header         X-Real-IP       $remote_addr;
        proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version       1.1;
        #proxy_cache              cinemacache;
        #proxy_cache_bypass       $do_not_cache;
        #proxy_cache_valid        404 500 502 503 504 1m;
        #proxy_cache_valid        any 1h;
        proxy_pass               http://example.com;
    }

    location ~ ^/(episode\.json|iframe\.player) {
        if ($host ~* "^(m\.example.com)$") {
            rewrite ^(.*)$ /mobile-version$1 break;
        }
        #if ($http_cookie ~* ".+" ) {
        #    set $do_not_cache 1;
        #}

        access_log               off;
        autoindex                off;
        expires                  1h;
        limit_req                zone=cinemapress burst=50;
        proxy_max_temp_file_size 0;
        proxy_next_upstream      error timeout http_500 http_502 http_503 http_504;
        proxy_set_header         Connection "";
        proxy_set_header         Host            $host;
        proxy_set_header         X-Real-IP       $remote_addr;
        proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version       1.1;
        #proxy_cache              cinemacache;
        #proxy_cache_bypass       $do_not_cache;
        #proxy_cache_valid        404 500 502 503 504 1m;
        #proxy_cache_valid        any 1h;
        proxy_pass               http://example.com;
    }

    location /admin {
        auth_basic               "Login Admin page!";
        auth_basic_user_file     /etc/nginx/pass/example.com.pass;
        proxy_max_temp_file_size 0;
        proxy_next_upstream      error timeout http_500 http_502 http_503 http_504;
        proxy_set_header         Connection "";
        proxy_set_header         Host            $host;
        proxy_set_header         X-Real-IP       $remote_addr;
        proxy_set_header         X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version       1.1;
        proxy_pass               http://example.com;
    }

    error_page 500 502 503 504 520 /50x.html;
    location = /50x.html {
        root       /etc/nginx/html;
        access_log off;
        autoindex  off;
        internal;
    }

    error_page 404 /404.html;
    location = /404.html {
        root       /etc/nginx/html;
        access_log off;
        autoindex  off;
        internal;
    }

    error_page 403 /403.html;
    location = /403.html {
        root       /etc/nginx/html;
        access_log off;
        autoindex  off;
        internal;
    }

    error_page 401 /401.html;
    location = /401.html {
        root       /etc/nginx/html;
        access_log off;
        autoindex  off;
        internal;
    }

}